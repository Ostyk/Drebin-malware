from sklearn.svm import SVC
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.model_selection import StratifiedKFold,KFold
from sklearn.metrics import accuracy_score, confusion_matrix, precision_score
from sklearn.metrics import classification_report, recall_score, f1_score
from sklearn.metrics import roc_curve, auc
from sklearn.preprocessing import StandardScaler

import pandas as pd


def scale_set(train,test):
    """uses sklearn standard sclar to normalize data"""
    sc = StandardScaler()
    fitted = sc.fit(train)
    return sc.transform(train), sc.transform(test)

def my_SVM(X_train, X_test,y_train, y_test, C, gamma):
    ''' SVM implementation to be used in CV
    '''
    clf = SVC(probability=True, C=C, gamma=gamma)
    clf.fit(X_train, y_train)

    y_predict=clf.predict(X_test)

    x = {"accuracy":accuracy_score(y_test, y_predict),
         "recall":precision_score(y_test, y_predict),
         "precision":recall_score(y_test, y_predict),
         "f1-score":f1_score(y_test, y_predict)}
    return pd.DataFrame(list(x.values()),index=list(x.keys()),columns=['model']).T
